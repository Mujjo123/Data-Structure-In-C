#include <stdio.h>
#include <stdlib.h>
#define size 3

int queue[size];
int front = -1, rear = -1;

void enqueue();
void dequeue();
void display();

int main() {
    int ch;
    do {
        printf("\nQueue Operations Menu:\n");
        printf("1: Enqueue\n");
        printf("2: Dequeue\n");
        printf("3: Display\n");
        printf("4: Exit\n");
        printf("Choice: ");
        scanf("%d", &ch);

        switch (ch) {
            case 1:
                enqueue();
                break;
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;
            case 4:
                printf("Program End\n");
                break;
            default:
                printf("Wrong choice\n");
                break;
        }
    } while (ch != 4);

    return 0;
}

void enqueue() {
    int x;
    if ((front == 0 && rear == size - 1) || (rear == front - 1)) {
        printf("Queue is full\n");
        return;
    } else if (front == -1) {
        front = rear = 0;
    } else if (rear == size - 1) {
        rear = 0;
    } else {
        rear++;
    }
    printf("Enter data: ");
    scanf("%d", &x);
    queue[rear] = x;
    printf("%d successfully enqueued\n", x);
}

void dequeue() {
    int x;
    if (front == -1) {
        printf("Queue is empty\n");
        return;
    }
    x = queue[front];
    if (front == rear) {
        front = rear = -1;
    } else if (front == size - 1) {
        front = 0;
    } else {
        front++;
    }
    printf("%d successfully dequeued\n", x);
}

void display() {
    if (front == -1) {
        printf("Queue is empty\n");
        return;
    }
    printf("Queue Contents:\n");
    if (rear >= front) {
        for (int i = front; i <= rear; i++) {
            printf("%d\n", queue[i]);
        }
    } else {
        for (int i = front; i < size; i++) {
            printf("%d\n", queue[i]);
        }
        for (int i = 0; i <= rear; i++) {
            printf("%d\n", queue[i]);
        }
    }
}
